#include "ClassTCP.h"

ClassTCP::ClassTCP(QObject *parent) : QObject(parent)
{
    initTcpSocket();
    funcInitClassConfiguration();
    counter = 0;
    makeHeader();
    makePacketID();
    makeControl1();
    makeControl2();
    makeControl3();
    makeCheckSum();
}


void ClassTCP::funcInitClassConfiguration()
{
    classConfiguration = Configuration::getInstance();
}

void ClassTCP::initTcpSocket()
{
    server = new QTcpServer(this);
    connect(server, &QTcpServer::newConnection, this, &ClassTCP::slotNextPendingConnection);

    server->listen(QHostAddress::Any, 1237);
    if (!server->listen(QHostAddress::Any, 1237)) {
        qDebug() << "Server failed to listen:" << server->errorString();
    } else {
        qDebug() << "Server listening on port 1237";
    }
}

void ClassTCP::makeHeader()
{
    strHexHeader = "AA";
}

void ClassTCP::makePacketID()
{
    strHexPacketID = "CC";
}

void ClassTCP::makeControl1()
{
    QString strBinary = "1010";
    int intBinary     = strBinary.toUInt(nullptr, 2);
    strHexControl1    = QString::number(intBinary, 16);
    strHexControl1    = addZero(2, strHexControl1);
}

void ClassTCP::makeControl2()
{
//    QString strBinary = QString::number(counter);
//    int intBinary     = strBinary.toUInt(nullptr, 2);
//    strHexControl2    = QString::number(intBinary, 16);
//    strHexControl2    = addZero(2, strHexControl2);

    strHexControl2 = QString::number(counter, 16).toUpper();
    strHexControl2 = addZero(2, strHexControl2);

}

void ClassTCP::makeControl3()
{
    strHexControl3 = "Hello";
}

QString ClassTCP::addZero(int length, QString string)
{
    while (string.length() < length)
    {
        string = "0" + string;
    }
    return string;
}

void ClassTCP::makeCheckSum()
{
    uint32_t uInt32CheckSum = 0;
    uInt32CheckSum += strHexHeader   .toInt(nullptr, 16);
    uInt32CheckSum += strHexPacketID .toInt(nullptr, 16);
    uInt32CheckSum += strHexControl1 .toInt(nullptr, 16);
    uInt32CheckSum += strHexControl2 .toInt(nullptr, 16);
//    uInt32CheckSum += strHexControl3 .toInt(nullptr, 16);

    uint8_t uInt8 = uInt32CheckSum;

    strHexChecksum   = QString::number(uInt8, 16);
    strHexChecksum   = addZero(2, strHexChecksum);
}

void ClassTCP::preparePacketToSend()
{
    makeControl2();
//    makeCheckSum();
    QByteArray packet = (
                strHexHeader   + strHexPacketID +
                strHexControl1 + strHexControl2 +
                strHexChecksum +
                strHexControl3
                ).toLatin1();
    socket->write(packet);
    counter++;
}


void ClassTCP::slotReadyRead()
{
    QByteArray ba;
    ba = socket->readAll();
    qDebug()<< ba;
    preparePacketToSend();
}

void ClassTCP::slotNextPendingConnection()
{
    socket = server->nextPendingConnection();
    qDebug() << "New client connected.";

    connect(socket, &QTcpSocket::readyRead, this, &ClassTCP::slotReadyRead);

}

